{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Users/users.module.css","api/api.js","assets/images/preloader.svg","components/hoc/withAuthRedirect.js","logo.svg","serviceWorker.js","redux/sidebar-reducer.js","utils/object-helpers.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Setings/Setings.jsx","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","components/hoc/withSuspense.js","App.js","index.js","components/common/FormsControls/FormsControls.js","components/common/Preloader/Preloader.js","components/common/Paginator/Paginator.module.css","components/common/FormsControls/FormsControls.module.css","components/Header/Header.module.css","utils/validators/validators.js","redux/profile-reducer.js","redux/dialogs-reducer.js"],"names":["module","exports","instance","axios","withCredentials","baseURL","headers","usersAPI","requestUsers","page","pageSize","get","then","response","data","follow","id","post","unfollow","delete","getProfile","userId","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","Boolean","window","location","hostname","match","initialState","sidebarReducer","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","currentPage","isFetching","followingInProgress","followSuccess","type","setCurrentPage","toogleIsFetching","toogleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","action","followed","count","filter","setAuthUserData","payload","getAuthUserData","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","sidebar","usersPage","app","apphReducer","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Navbar","className","s","nav","item","NavLink","activeClassName","active","News","Music","Setings","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionPageNumber","leftPortionPageNumber","rightPortionPageNumber","styles","selectedPage","paginator","onClick","p","cn","pageNumber","key","e","User","user","userPhoto","src","photos","small","alt","disabled","some","name","Users","getUsers","createSelector","log","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","Preloader","bind","totalCount","Header","header","loginBlock","HeaderContainer","LoginReduxForm","reduxForm","handleSubmit","error","onSubmit","createField","required","Input","style","formSummaryError","message","messages","length","stopSubmit","_error","Redirect","formData","withSuspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","Route","path","render","AppContainer","withRouter","promise","Promise","all","NewApp","BrowserRouter","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","FormControl","input","meta","touched","children","hasError","formControl","Textarea","restProps","child","placeholder","validators","component","text","validate","backgroundColor","preloader","value","maxLengthCreator","maxLength","initialeState","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","newPost","dialogs","sendMessageCreator","newMessageBody","body"],"mappings":"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","file":"static/js/main.6f88be35.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1wjqh\",\"item\":\"Navbar_item__1F-Ad\",\"active\":\"Navbar_active__2A71h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__2abA4\",\"usersBlock\":\"users_usersBlock__1vqXo\"};","import * as axios from 'axios';\r\n\r\nconst instance =  axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\"API-KEY\": \"7bed4946-9972-4e0e-bf8f-b616807e7b9c\"}\r\n});\r\n\r\n\r\nexport const usersAPI = {\r\n    requestUsers(page = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${page}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data; \r\n            });\r\n    },\r\n    follow(id) {\r\n        return instance.post(`follow/${id}`)\r\n        .then(response => {\r\n            return response.data;\r\n        });\r\n    },\r\n    unfollow(id) {\r\n        return instance.delete(`follow/${id}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n        },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please use profileAPI object.');\r\n        return profileAPI.getProfile(userId); \r\n       \r\n    }\r\n}\r\n\r\n\r\nexport const profileAPI = {\r\n   \r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`);\r\n       \r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put('profile/status', {status: status});\r\n    }\r\n}\r\n\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    },\r\n}\r\n\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/preloader.ae85b320.svg\";","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    \r\n    let ConectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n    return ConectedAuthRedirectComponent;\r\n\r\n}\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;\r\n","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n   return items.map( u =>  {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}\r\n","import { usersAPI } from \"../api/api\";\r\nimport { updateObjectInArray } from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOOGLE_IS_FETCHING = 'TOOGLE_IS_FETCHING';\r\nconst TOOGLE_IS_FOLLOWING_PROGRESS = 'TOOGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 15,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n            }\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users }\r\n        }\r\n        case  SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage}\r\n        } \r\n        case  SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUsersCount: action.count}\r\n        }\r\n        case  TOOGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching}\r\n        }\r\n        case  TOOGLE_IS_FOLLOWING_PROGRESS: {\r\n            return { \r\n                ...state,\r\n                 followingInProgress: action.isFetching \r\n                 ? [...state.followingInProgress, action.userId] \r\n                 : state.followingInProgress.filter(id => id != action.userId)\r\n                }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst followSuccess = (userId) => ({type: FOLLOW, userId })\r\nconst unfollowSuccess = (userId) => ({type: UNFOLLOW, userId })\r\nexport const setUsers = (users) => ({type: SET_USERS, users })\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage })\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\r\nexport const toogleIsFetching = (isFetching) => ({type: TOOGLE_IS_FETCHING, isFetching })\r\nexport const toogleFollowingProgress = (isFetching, userId) => ({type: TOOGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n\r\n   return async (dispatch) => {\r\n        dispatch (toogleIsFetching(true));\r\n        dispatch (setCurrentPage(page));\r\n\r\n      let data = await usersAPI.requestUsers(page, pageSize);\r\n\r\n                dispatch(toogleIsFetching(false));\r\n                dispatch(setUsers(data.items)); \r\n                dispatch(setTotalUsersCount(data.totalCount)); \r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toogleFollowingProgress(true, userId));\r\n    let data = await apiMethod(userId)\r\n    if (data.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    } \r\n    dispatch(toogleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\r\n     }\r\n }\r\n\r\n export const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.unfollow.bind(usersAPI), followSuccess)\r\n    }\r\n }\r\n\r\nexport default usersReducer;","    import { authAPI } from \"../api/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nlet initialState = {\r\n      userId: null,\r\n      email: null,\r\n      login: null,\r\n      isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n    default:\r\n        return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({ type: SET_USER_DATA, payload: \r\n    {userId, email, login, isAuth} });\r\n\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me()\r\n\r\n        if (response.data.resultCode === 0) {\r\n          let {id, login, email} = response.data.data;\r\n          dispatch(setAuthUserData(id, email, login, true))\r\n        }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getAuthUserData());\r\n        } else {\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n            dispatch(stopSubmit(\"login\", {_error: message}));\r\n        }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false))\r\n        }\r\n}\r\n\r\n\r\nexport default authReducer;","import { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n    default:\r\n        return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then( () => {\r\n        dispatch(initializedSuccess());\r\n    }) \r\n}\r\n\r\nexport default appReducer;","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport apphReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: apphReducer,\r\n    form: formReducer\r\n\r\n}); //объединяем редьюсеры\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n\treturn  (\r\n\t\t<nav className={s.nav}>\r\n\t\t     <div className={s.item}>\r\n\t\t        <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\r\n\t\t    </div>\r\n\t\t      <div className={s.item}>\r\n\t\t        <NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink>\r\n\t\t    </div>\r\n\t\t      <div className={`${s.item} ${s.active}`}>\r\n\t\t        <NavLink to=\"/news\" activeClassName={s.active}>News</NavLink>\r\n\t\t    </div> \r\n\t\t\t<div className={`${s.item}`}>\r\n\t\t        <NavLink to=\"/users\" activeClassName={s.active}>Users</NavLink>\r\n\t\t    </div>\r\n\t\t      <div className={s.item}>\r\n\t\t        <NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink>\r\n\t\t    </div>\r\n\t\t       <div className={s.item}>\r\n\t\t        <NavLink to=\"/setings\" activeClassName={s.active}>Setings</NavLink>\r\n\t\t    </div>\r\n\t\t</nav>\r\n\t\t)\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './News.module.css';\r\n\r\nconst News = () => {\r\n\treturn  (\t\r\n\t\t<div>\r\n\t\t\tNews\r\n\t\t</div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nconst Music = () => {\r\n\treturn  (\t\r\n\t\t<div>\r\n\t\t\tMusic\r\n\t\t</div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport s from './Setings.module.css';\r\n\r\nconst Setings = () => {\r\n\treturn  (\t\r\n\t\t<div>\r\n\t\t\tSetings\r\n\t\t</div>\r\n    )\r\n}\r\n\r\nexport default Setings;","import React, {useState} from 'react';\r\nimport styles from './Paginator.module.css';\r\nimport cn from \"classnames\";\r\n\r\n\r\n\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    \r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionPageNumber] = useState(1) \r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    \r\n     \r\n    let currentPageClass = styles.selectedPage + ' ' + styles.pages;\r\n\r\n    return   <div className={styles.paginator}>\r\n\r\n        {portionNumber > 1 && \r\n        <button onClick={ () => {setPortionPageNumber(portionNumber - 1)}}>PREV</button>}\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n                .map((p) => {\r\n                    return <span className = { cn({\r\n                        [styles.selectedPage] : currentPage === p\r\n                    }, styles.pageNumber)}\r\n                    key={p}\r\n                    onClick={(e) => {\r\n                        onPageChanged(p);\r\n                    }}>{p}</span>\r\n\r\n            })}\r\n\r\n            {portionCount > portionNumber &&\r\n                <button onClick={ () => {setPortionPageNumber(portionNumber + 1)}}>NEXT</button>}  \r\n    </div>\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport styles from './users.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow, userPhoto }) => {\r\n\r\n    return  <div>\r\n               \r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={'/profile/' + user.id}>\r\n                            <img src={user.photos.small != null ? user.photos.small : userPhoto} \r\n                                className={styles.userPhoto} alt=\"\"/>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            {user.followed \r\n                            ? <button disabled={followingInProgress.some(id => id == user.id)} onClick={ () => {\r\n                                unfollow(user.id);                             \r\n                            }}>Unfollow</button> \r\n                            : <button disabled={followingInProgress.some(id => id == user.id)} onClick={ () => {\r\n                                follow(user.id);               \r\n                            }}>Follow</button>}\r\n                            \r\n                        </div>\r\n                    </span>\r\n                    <span>\r\n                        <span>\r\n                            <div>{user.name}</div>\r\n                            <div>{user.status}</div>\r\n                        </span>\r\n                        <span>\r\n                        <div>{\"u.location.country\"}</div>\r\n                        <div>{\"u.location.city\"}</div>\r\n                        </span>\r\n                    </span>\r\n                    \r\n                    </div>\r\n\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport User from './User';\r\n\r\n\r\n\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, ...props}) => {\r\n\r\n    return  <div>\r\n                <Paginator currentPage={currentPage} onPageChanged={onPageChanged} \r\n                           totalItemsCount={totalUsersCount} pageSize={pageSize} />\r\n                <div>\r\n                    {\r\n                        props.users.map(u => <User user={u} \r\n                                            key={u.id} \r\n                                            followingInProgress={props.followingInProgress}\r\n                                            unfollow={props.unfollow}\r\n                                            follow={props.follow}\r\n                                            /> )\r\n                        \r\n                    }\r\n                </div>\r\n            </div>        \r\n}\r\n\r\nexport default Users;","import { createSelector } from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    console.log('selector');\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector( getUsersSelector, (users) => {\r\n    console.log('reselector');\r\n    return users;\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {follow, unfollow, setCurrentPage,\r\n    toogleFollowingProgress, requestUsers} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { \r\n    getPageSize, \r\n    getUsers, \r\n    getTotalUsersCount, \r\n    getCurrentPage, getIsFetching, \r\n    getFollowingInProgress \r\n} from '../../redux/users-selectors';\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let {currentPage, pageSize} = this.props;\r\n        this.props.requestUsers(currentPage, pageSize);     \r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        let {pageSize} = this.props.pageSize\r\n        this.props.requestUsers(pageNumber, pageSize);\r\n    }\r\n    \r\n    \r\n    render() {\r\n        \r\n        return <>\r\n            { this.props.isFetching ? <Preloader /> : null }\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                        pageSize={this.props.pageSize}\r\n                        currentPage={this.props.currentPage}\r\n                        onPageChanged={this.onPageChanged}\r\n                        users={this.props.users}\r\n                        follow={this.props.follow}\r\n                        unfollow={this.props.unfollow}\r\n                        followingInProgress={this.props.followingInProgress}      \r\n            />\r\n        </> \r\n        \r\n    }\r\n}\r\n\r\n/* let mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage. currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    }\r\n}\r\n */\r\n\r\n let mapStateToProps = (state) => {\r\n    \r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    connect (mapStateToProps, \r\n        {follow, unfollow, setCurrentPage, toogleFollowingProgress, requestUsers}),\r\n        //withAuthRedirect\r\n) (UsersContainer)\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n\treturn  (\r\n\t\t<header className={s.header}>\r\n        <img src='https://w0.pngwave.com/png/935/389/university-of-amikom-yogyakarta-condongcatur-logo-social-media-social-media-png-clip-art.png' />\r\n        <div className={s.loginBlock}>\r\n          {props.isAuth ? <div>{props.login} - <button onClick={props.logout}>Log out</button> </div>\r\n              : <NavLink to={'/login'}>Login</NavLink> \r\n          }\r\n        </div>\r\n      </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport {logout} from '../../redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n  render() {\r\n    return  <Header {...this.props} />\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login\r\n});\r\nexport default connect(mapStateToProps, {logout}) (HeaderContainer);","import React from 'react';\r\nimport { reduxForm, Field, reset } from 'redux-form';\r\nimport { Input, createField } from '../common/FormsControls/FormsControls';\r\nimport { required } from '../../utils/validators/validators';\r\nimport { connect } from 'react-redux';\r\nimport {login} from '../../redux/auth-reducer';\r\nimport { Redirect } from 'react-router';\r\nimport style from '../common/FormsControls/FormsControls.module.css';\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n  dispatch(reset('ordersTradesSearchForm'));\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n            {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\r\n            <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n        const onSubmit = (formData, dispatch) => {   \r\n            //dispatch(reset(\"login\"));\r\n            props.login(formData.email, formData.password, formData.rememberMe);\r\n        }\r\n\r\n        if (props.isAuth) {\r\n            return <Redirect to={\"/profile\"} />\r\n        }\r\n\r\n    return <div>\r\n        <h1>LOGIN</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {login}) (Login);","import React, { Suspense } from 'react';\r\nimport Preloader from '../common/Preloader/Preloader';\r\n\r\nexport const withSuspense = (Component) => {\r\n\r\n\r\n    return (props) => {\r\n        return  <Suspense fallback={<Preloader />}>\r\n            <Component {...props} />\r\n            </Suspense>\r\n    }\r\n\r\n}\r\n\r\n","import React, { Suspense } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport {Route, withRouter} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {Provider} from 'react-redux';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport store from './redux/redux-store';\r\n\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport News from './components/News/News';\r\nimport Music from './components/Music/Music';\r\nimport Setings from './components/Setings/Setings';\r\n\r\n\r\nimport UsersContainer from './components/Users/UsersContainer';\r\n\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Login from './components/Login/Login';\r\nimport { compose } from 'redux';\r\nimport {initializeApp} from './redux/app-reducer'\r\nimport Preloader from './components/common/Preloader/Preloader';\r\nimport { withSuspense } from './components/hoc/withSuspense';\r\n\r\n//import DialogsContainer from './components/Dialogs/DialogsContainer';\r\n//import ProfileContainer from './components/Profile/ProfileContainer';\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\n\r\nclass App extends React.Component {\r\n\r\n  componentDidMount() {\r\n    this.props.initializeApp();\r\n  }\r\n  \r\n  render() {\r\n    if (!this.props.initialized) {\r\n      return <Preloader/>\r\n    }\r\n\r\n    return (\r\n      \r\n        <div className=\"app-wrapper\">\r\n          <HeaderContainer />\r\n          <Navbar />\r\n          <div className=\"app-wrapper-content\">\r\n              <Route path='/dialogs' render={ withSuspense(DialogsContainer) } />\r\n              <Route path='/profile/:userId?' render={ withSuspense(ProfileContainer) } />\r\n              <Route path='/users' render={ () => <UsersContainer /> } />\r\n              <Route path='/news' render={ () => <News /> } />\r\n              <Route path='/music' render={ () => <Music /> } />\r\n              <Route path='/setings' render={ () => <Setings /> } />\r\n              <Route path='/login' render={ () => <Login /> } />\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.app.initialized\r\n})\r\n\r\nlet AppContainer = compose (\r\n withRouter,\r\n connect(mapStateToProps, {initializeApp})) (App);\r\n\r\nconst NewApp = (props) => {\r\n  return  <BrowserRouter>\r\n      <Provider store={store}>\r\n          <AppContainer />\r\n      </Provider>\r\n    </BrowserRouter>\r\n }\r\n\r\n export default NewApp;","\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nimport NewApp from './App';\r\n\r\n\r\n    ReactDOM.render(<NewApp />, document.getElementById('root'));\r\n\r\n\r\n\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n","import React from 'react';\r\nimport styles from './FormsControls.module.css';\r\nimport { Field } from 'redux-form';\r\n\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n   \r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n           <div>\r\n                {children}\r\n            </div> \r\n           {hasError && <span>{error}</span> } \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}> <textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}> <input {...input} {...restProps} /></FormControl> \r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = '') => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n                        validate={validators}\r\n                        component={component}\r\n                        {...props}\r\n        /> {text}\r\n    </div>\r\n)\r\n\r\n","import React from 'react';\r\nimport preloader from '../../../assets/images/preloader.svg';\r\n\r\nlet Preloader = (props) => {\r\n    return <div style={ {backgroundColor: 'white'} }>\r\n                <img src={preloader} /> \r\n    </div>\r\n}\r\n\r\nexport default Preloader;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__25dx9\",\"pageNumber\":\"Paginator_pageNumber__2yBIB\",\"selectedPage\":\"Paginator_selectedPage__RerYR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2b2OP\",\"error\":\"FormsControls_error__WdXeL\",\"formSummaryError\":\"FormsControls_formSummaryError__3q9zK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2lDiM\",\"loginBlock\":\"Header_loginBlock__7YU_f\"};","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","import { usersAPI,  profileAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\n\r\nlet initialeState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you', likesCount:10},\r\n        {id: 2, message: 'Its is my first post', likesCount:15},\r\n        {id: 3, message: 'Good', likesCount:16},\r\n        {id: 4, message: 'How are you', likesCount:20},\r\n        {id: 5, message: 'Im Fine', likesCount:0},\r\n        {id: 6, message: 'And, you', likesCount:0},\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nexport const profileReducer = (state = initialeState, action) => {\r\n    switch(action.type) {\r\n        case ADD_POST: {\r\n            let newPost =  {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]    \r\n            };\r\n        }\r\n        case SET_STATUS: { \r\n            return {\r\n                ...state,\r\n                status: action.status\r\n             };\r\n        }\r\n        case SET_USER_PROFILE: { \r\n            return {...state, profile: action.profile};\r\n        }\r\n        \r\n        default: \r\n            return state;\r\n        \r\n    }\r\n}\r\n\r\nexport const addPostActionCreator  = (newPostText) => ({type: ADD_POST, newPostText});\r\nconst setUserProfile  = (profile) => ({type: SET_USER_PROFILE, profile})\r\nconst setStatus  = (status) => ({type: SET_STATUS, status})\r\n\r\n\r\nexport const getUserProfile  = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId);\r\n            dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n            dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus  = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setStatus(status));\r\n            }\r\n}\r\n\r\n\r\n\r\nexport default profileReducer;","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n\tdialogs: [\r\n\t\t{id: 1, name: 'Dimych'},\r\n\t\t{id: 2, name: 'Sandron'},\r\n\t\t{id: 3, name: 'Kolyan'},\r\n\t\t{id: 4, name: 'Anton'},\r\n\t\t{id: 5, name: 'Ira'},\r\n\t\t{id: 6, name: 'Sveta'},\r\n\t],\r\n\tmessages: [\r\n\t\t{id: 1, message: 'Hi'},\r\n\t\t{id: 2, message: 'Hello'},\r\n\t\t{id: 3, message: 'Good'},\r\n\t\t{id: 4, message: 'Foo'},\r\n\t\t{id: 5, message: 'Moo'},\r\n\t\t{id: 6, message: 'Doo'}\r\n\t]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case SEND_MESSAGE: {\r\n\t\t\tlet body = action.newMessageBody;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessages: [...state.messages, {id: 7, message: body}]\r\n\t\t\t};\r\n\t\t}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody});\r\n\r\nexport default dialogsReducer;"],"sourceRoot":""}