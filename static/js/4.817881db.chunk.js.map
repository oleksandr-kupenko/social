{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/MessageItem/MessageItem.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","MessageItem","props","className","s","message","DialogItem","path","id","dialog","NavLink","to","activeClassName","active","name","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","messagesElement","messages","map","m","key","dialogsElement","dialogs","d","isAuth","dialogsItems","e","dispatch","sendMessage","newMessageBody","reset","Redirect","compose","connect","sendMessageCreator","withAuthRedirect"],"mappings":"uHACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,wHCQnKC,EALK,SAACC,GACpB,OAAO,yBAAKC,UAAWC,IAAEC,SAAUH,EAAMG,U,SCQ3BC,EATI,SAACJ,GAClB,IAAIK,EAAO,YAAcL,EAAMM,GAC/B,OAAO,yBAAKL,UAAWC,IAAEK,QACzB,kBAACC,EAAA,EAAD,CAASC,GAAIJ,EAAMK,gBAAiBR,IAAES,QAASX,EAAMY,Q,gBCkCjDC,EAAcC,YAAiB,IAiB/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAfL,SAAChB,GAEvB,OACC,0BAAMkB,SAAUlB,EAAMmB,cACrB,6BACC,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAChBC,SAAU,CAACC,IAAUX,GACvBD,KAAK,iBAAiBa,YAAY,wBAGnC,6BAAK,6CAOOC,EAjDC,SAAC1B,GAEhB,IAAI2B,EAAQ3B,EAAM4B,YAEdC,EAAkBF,EAAMG,SAC1BC,KAAK,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAa7B,QAAS6B,EAAE7B,QAAS8B,IAAKD,EAAE1B,GAAIA,GAAI0B,EAAE1B,GAAII,gBAAiBR,IAAES,YAEjFuB,EAAiBP,EAAMQ,QAAQJ,KAAK,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAAYxB,KAAMwB,EAAExB,KAAMqB,IAAKG,EAAE9B,GAAIA,GAAI8B,EAAE9B,QAQxF,OAAKN,EAAMqC,OAGV,yBAAKpC,UAAWC,IAAEiC,SACjB,yBAAKlC,UAAWC,IAAEoC,cAChBJ,GAEF,yBAAKjC,UAAWC,IAAE4B,UACjB,6BAAMD,GACL,kBAACd,EAAD,CAAqBG,SAdL,SAACqB,EAAGC,GACvBxC,EAAMyC,YAAYF,EAAEG,gBACpBF,EAASG,YAAM,8BAGU,kBAACC,EAAA,EAAD,CAAUnC,GAAI,Y,wBCL1BoC,sBACdC,aAfqB,SAACnB,GACtB,MAAO,CACNC,YAAaD,EAAMC,gBAII,SAACY,GACzB,MAAO,CACNC,YAAa,SAACC,GAAD,OAAoBF,EAASO,YAAmBL,SAQ9DM,IAFcH,CAGbnB","file":"static/js/4.817881db.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3FhkS\",\"dialogsItems\":\"Dialogs_dialogsItems__17zVD\",\"active\":\"Dialogs_active__1AfqV\",\"messages\":\"Dialogs_messages__2diih\",\"message\":\"Dialogs_message__T4Y2b\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\nconst MessageItem = (props) => {\r\n\treturn <div className={s.message}>{props.message}</div>\r\n\r\n}\r\n\r\nexport default MessageItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n\t let path = \"/dialogs/\" + props.id;\r\n \treturn <div className={s.dialog}>\r\n\t\t<NavLink to={path} activeClassName={s.active}>{props.name}</NavLink>\r\n\t</div>\r\n}\r\n\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport { reduxForm, Field, reset } from 'redux-form';\r\n\r\n\r\nimport MessageItem from \"./MessageItem/MessageItem\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\nimport { required, maxLengthCreator } from '../../utils/validators/validators';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n\tlet state = props.dialogsPage;\r\n\t\r\n\tlet messagesElement = state.messages\r\n\t\t.map( m => <MessageItem message={m.message} key={m.id} id={m.id} activeClassName={s.active} />);\r\n\r\n\tlet dialogsElement = state.dialogs.map( d => <DialogItem name={d.name} key={d.id} id={d.id} /> );\r\n\r\n\r\n\tlet addNewMessage = (e, dispatch) => {\r\n\t\tprops.sendMessage(e.newMessageBody);\r\n\t\tdispatch(reset(\"dialogAddMessageForm\"));\r\n\t}\r\n\r\n\tif (!props.isAuth) return <Redirect to={\"/login\"} />\r\n\r\n\treturn  (\t\r\n\t\t<div className={s.dialogs}>\r\n\t\t\t<div className={s.dialogsItems}>\r\n\t\t\t\t{dialogsElement}\r\n\t\t\t</div>\r\n\t\t\t<div className={s.messages}>\r\n\t\t\t\t<div>{messagesElement}</div>\r\n\t\t\t\t\t<AddMessageFormRedux onSubmit={addNewMessage} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n    )\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n\r\n\treturn (\r\n\t\t<form onSubmit={props.handleSubmit}>\r\n\t\t\t<div>\r\n\t\t\t\t<Field component={Textarea}\r\n\t\t\t\t\t\tvalidate={[required, maxLength50]}\r\n\t\t\t\tname=\"newMessageBody\" placeholder=\"Enter your message\" />\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<div><button>Send</button></div>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"}) (AddMessageForm);\r\n\r\nexport default Dialogs;","import { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tdialogsPage: state.dialogsPage,\r\n\t}\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tsendMessage: (newMessageBody) => dispatch(sendMessageCreator(newMessageBody))\r\n\t}\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, mapDispatchToProps),\r\n\twithAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}