{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","s","bigAvatar","src","descriptionBlock","photos","large","Preloader","Post","item","message","likesCount","MyPosts","React","memo","postsElements","posts","map","p","classmessage","postsBlock","AddPostFormRedux","onSubmit","dispatch","addPost","newPostBody","reset","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPostsContainer","connect","state","profilePage","newPostText","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.e6cf408e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2Zc4v\",\"bigAvatar\":\"ProfileInfo_bigAvatar__Zysxo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3iYGp\",\"posts\":\"MyPosts_posts__2ZJl4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Post_content__3Utit\",\"item\":\"Post_item__1O8ib\"};","import React, { useState, useEffect } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n  /*let stateWithSetState = useState(true); //отдает массив с двумя элементами\r\n  let editMode = stateWithSetState[0]; //первый элемент – это само значение\r\n  let setEditMode = stateWithSetState[1]; //второй элемент – это функция для изменения\r\n  */\r\n\r\n\r\n  let [editMode, setEditMode] = useState(false); //деструктивное присваивание для более короткой записи\r\n  let [status, setStatus] = useState(props.status); //при работе с хуками приходится для каждого свойства стейта так делать\r\n  \r\n  useEffect( () => {\r\n    setStatus(props.status)\r\n  }, [props.status])\r\n  \r\n  \r\n  \r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  }\r\n\r\n  const onStatusChange = (e) =>{\r\n    setStatus(e.currentTarget.value);\r\n  }\r\n\r\n    return  (\r\n          <div>\r\n            { !editMode &&\r\n              <div>\r\n              <span onDoubleClick={activateEditMode}>{props.status || \"------\"}</span>\r\n              </div>\r\n            }\r\n            { editMode &&\r\n              <div>\r\n                  <input onChange={onStatusChange}\r\n                     autoFocus={true} \r\n                     onBlur={ deactivateEditMode } \r\n                     value={status} />\r\n              </div>\r\n            }\r\n        </div>\r\n      )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;\r\n\r\n\r\n","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n\treturn  (\r\n      <div>\r\n        <div className={s.bigAvatar}>\r\n          <img src=\"https://atlantis.nyc3.digitaloceanspaces.com/styled/72025f140f22a3eb32950bbb9d76e68d\" />\r\n        </div> \r\n        <div className={s.descriptionBlock}>\r\n          <img src={profile.photos.large} />\r\n          <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n        </div>\r\n      </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileInfo;\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n               <img src=\"https://cdn3.iconfinder.com/data/icons/business-avatar-1/512/4_avatar-512.png\" />\r\n                {props.message}\r\n                \t<div>\r\n                \t\t<span>Like:</span>{props.likesCount}\r\n                \t</div>\r\n              </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { reduxForm, Field, reset } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements = props.posts\r\n        .map( p => <Post message = {p.message} likesCount={p.likesCount} /> );\r\n    \r\n\r\n    let onAddPost = (e, dispatch) => {\r\n      props.addPost(e.newPostBody);\r\n      dispatch(reset(\"profileAddPostForm\"));\r\n    }\r\n\r\n\r\n\treturn  (\r\n\t\t        <div classmessage={s.postsBlock}>\r\n          <h3>My posts</h3>\r\n            <div>\r\n              <AddPostFormRedux onSubmit={onAddPost} />\r\n            </div>\r\n              <div classmessage={s.posts}>\r\n                  {postsElements}\r\n              </div>\r\n        </div>\r\n\t\t)\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddPostForm = (props) => {\r\n \r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n          <Field component={Textarea} name=\"newPostBody\" placeholder=\"Post message\"\r\n                 validate={[required, maxLength10]} />\r\n      </div>\r\n        <div>\r\n          <button>Add post</button>\r\n        </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({form: \"profileAddPostForm\"}) (AddPostForm);\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from '../../../redux/profile-reducer' ;\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n      addPost: (newPostText) => dispatch(addPostActionCreator(newPostText))\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n\treturn  (\r\n\t\t  <div>\r\n        <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n        <MyPostsContainer />\r\n      </div>\r\n\t\t)\r\n}\r\n\r\nexport default Profile;","import React, { Component } from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport {getUserProfile, getStatus, updateStatus} from '../../redux/profile-reducer';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        } \r\n        \r\n\r\n\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n    \r\n    render() { \r\n        return  (\r\n           <Profile {...this.props} \r\n           profile={this.props.profile}\r\n            status={this.props.status} \r\n            updateStatus={this.props.updateStatus} />\r\n            )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    //withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n"],"sourceRoot":""}